  // {
  //   path: '/add',
  //   element: <AddJob />,
  // },
  // {
  //   path: '/admin',
  //   element: <Admin />,
  // },
  // {
  //   path: '/delete',
  //   element: <DeleteJob />,
  // },
  // {
  //   path: '/edit',
  //   element: <EditJob />,
  // },
  // {
  //   path: '/profile',
  //   element: <Profile />,
  // },
  // {
  //   path: '/stats',
  //   element: <Stats />,
  // },


  hipster ipsum  - text website

  // try {
//   const responseData = await fetch("https://dummyjson.com/products/1");
//   const productData = await responseData.json();
//   console.log(productData);
// } catch (error) {
//   console.log(error);
// }

// GET ALL JOBS
app.get("/api/v1/jobs", (req, res) => {
  // console.log(jobss);
  res.status(200).json({ jobs });
  // res.send(jobs);
});

// CREAATE A JOB
app.post("/api/v1/jobs", (req, res) => {
  const { company, position } = req.body;
  if (!company || !position) {
    res.status(400).json({ message: "please provide company and position" });
  }
  const id = nanoid();
  const job = { id, company, position };
  jobs.push(job);
  res.status(200).json({ job });
});

// GET SINGLE JOB
app.get("/api/v1/jobs/:id", (req, res) => {
  const { id } = req.params;
  // console.log(id);
  const job = jobs.find((job) => job.id === id);
  // console.log(job);
  if (!job) {
    throw new Error("no job with that id");
    return res.status(404).json({ msg: `no job with id:${id}` });
  }
  res.status(200).json({ job });
});

// EDIT JOB
app.patch("/api/v1/jobs/:id", (req, res) => {
  const { company, position } = req.body;
  if (!company || !position) {
    return res
      .status(404)
      .json({ message: "please provide company and position" });
  }
  const { id } = req.params;
  const job = jobs.find((job) => job.id === id);
  if (!job) {
    return res.status(404).json({ msg: `no job with id ${id}` });
  }
  job.company = company;
  job.position = position;
  res.status(200).json({ msg: "job modified", job });
});

// DELETE JOB
app.delete("/api/v1/jobs/:id", (req, res) => {
  const { id } = req.params;
  const job = jobs.find((job) => job.id === id);
  if (!job) {
    return res.status(404).json({ msg: `no job with id ${id}` });
  }
  const newJobs = jobs.filter((job) => job.id !== id);
  jobs = newJobs;
  console.log(newJobs);
  res.status(200).json({ msg: "job deleted" });
});